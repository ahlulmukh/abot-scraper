name: Release and Publish

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run lint check
        run: npm run lint:check

      - name: Run type check
        run: npm run type-check

      - name: Build project
        run: npm run build

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build project
        run: npm run build

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version and create release
        id: release
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Check if there are any commits since last release
          if git describe --tags --exact-match HEAD 2>/dev/null; then
            echo "No new commits since last release"
            echo "should_release=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Auto bump patch version
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

          # Commit version bump
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"

          # Create and push tag
          git tag "v$NEW_VERSION"
          git push origin main --tags

          echo "should_release=true" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.release.outputs.should_release == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.release.outputs.new_version }}
          release_name: Release v${{ steps.release.outputs.new_version }}
          body: |
            ## Changes in v${{ steps.release.outputs.new_version }}

            - Auto-generated release
            - Bug fixes and improvements

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.release.outputs.previous_version }}...v${{ steps.release.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Publish to NPM
        if: steps.release.outputs.should_release == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
